// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace FarmaciaApp_V2.Migrations
{
    [DbContext(typeof(ApplicationDBContext))]
    [Migration("20240125021511_CriacaoBanco")]
    partial class CriacaoBanco
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("FarmaciaApp_V2.Models.Fabricante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Fabricantes");
                });

            modelBuilder.Entity("FarmaciaApp_V2.Models.Medicamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataValidade")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("FabricanteId")
                        .HasColumnType("integer");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("NumeroRegistroAnvisa")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("PrecoReais")
                        .HasColumnType("numeric");

                    b.Property<int>("QuantidadeComprimidos")
                        .HasColumnType("integer");

                    b.Property<string>("TelefoneSAC")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("FabricanteId");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("MedicamentoReacaoAdversa", b =>
                {
                    b.Property<int>("MedicamentosId")
                        .HasColumnType("integer");

                    b.Property<int>("ReacoesAdversasId")
                        .HasColumnType("integer");

                    b.HasKey("MedicamentosId", "ReacoesAdversasId");

                    b.HasIndex("ReacoesAdversasId");

                    b.ToTable("MedicamentoReacaoAdversa", (string)null);
                });

            modelBuilder.Entity("ReacaoAdversa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ReacoesAdversas");
                });

            modelBuilder.Entity("FarmaciaApp_V2.Models.Medicamento", b =>
                {
                    b.HasOne("FarmaciaApp_V2.Models.Fabricante", "Fabricante")
                        .WithMany()
                        .HasForeignKey("FabricanteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Fabricante");
                });

            modelBuilder.Entity("MedicamentoReacaoAdversa", b =>
                {
                    b.HasOne("FarmaciaApp_V2.Models.Medicamento", null)
                        .WithMany()
                        .HasForeignKey("MedicamentosId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ReacaoAdversa", null)
                        .WithMany()
                        .HasForeignKey("ReacoesAdversasId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
